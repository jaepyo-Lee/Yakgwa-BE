version: '3'
networks:
  redis-connection:
    driver: bridge
  nginx-connection:
    driver: bridge
  ssl-connection:
    driver: bridge
services:
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    labels:
      - "mode=standalone"
    restart: always
    networks:
      - redis-connection
      - nginx-connection

  blue:
    container_name: blue
    image: jaepyo99/yakgwa
    env_file:
      - .env
    networks:
      - redis-connection
      - nginx-connection
    expose:
      - 8081
    ports:
      - 8081:8081
    tty: true
    environment:
      - TZ=Asia/Seoul

  green:
    container_name: green
    image: jaepyo99/yakgwa
    env_file:
      - .env
    networks:
      - redis-connection
      - nginx-connection
    expose:
      - 8082
    ports:
      - 8082:8082
    tty: true
    environment:
      - TZ=Asia/Seoul
#
#  spring:
#    container_name: yakgwa-dev
#    image: jaepyo99/yakgwa
#    env_file: # 이부분 추가 바랍니다
#      - .env
#    networks:
#      - redis-connection
#      - nginx-connection
#    expose:
#      - 8082
#    ports:
#      - 8082:8082
#    tty: true
#    environment:
#      - TZ=Asia/Seoul

#  nginx:
#    container_name: nginx
#    image: nginx:1.15-alpine
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - ./data/nginx.conf:/etc/nginx/nginx.conf
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    depends_on: # 빌드 시작 순서를 정해주는 옵션
#      - blue
#      - green
#    networks:
#      - nginx-connection
#      - ssl-connection
#    command: >
#      /bin/sh -c 'while :; do sleep 6h & wait $$!; nginx -s reload; done & nginx -g "daemon off;"'

  nginx-green:
    container_name: nginx-green
    image: nginx:1.15-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx.green.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on: # 빌드 시작 순서를 정해주는 옵션
      - blue
      - green
    networks:
      - nginx-connection
      - ssl-connection
    command: >
      /bin/sh -c 'while :; do sleep 6h & wait $$!; nginx -s reload; done & nginx -g "daemon off;"'

  nginx-blue:
    container_name: nginx-blue
    image: nginx:1.15-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx.blue.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on: # 빌드 시작 순서를 정해주는 옵션
      - blue
      - green
    networks:
      - nginx-connection
      - ssl-connection
    command: >
      /bin/sh -c 'while :; do sleep 6h & wait $$!; nginx -s reload; done & nginx -g "daemon off;"'

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - ssl-connection
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

